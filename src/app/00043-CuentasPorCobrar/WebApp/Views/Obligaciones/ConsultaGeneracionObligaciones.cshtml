@model WebApp.ViewModels.ConsultaObligacionEstudianteViewModel
@using GridMvc.Html
@Scripts.Render("~/bundles/jqueryval")

<style>
    .input-daterange {
        display: flex !important;
    }

    @@media (max-width: 768px) {
        .input-daterange {
            display: block !important;
        }
    }
</style>

<div class="container-fluid">
    <div class="col-12">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-search">&nbsp;</i>Consultas </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa bi-person-lines-fill">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>
    <br />

    <div class="col-12 mt-4">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body bg-light-gray">
                        @using (Html.BeginForm("ConsultaGeneracionObligaciones", "Obligaciones", FormMethod.Get, new { id = "formConsultaObligaciones" }))
                        {
                            <div class="form-row">
                                <div class="form-group col-lg-1 col-md-2 col-sm-4 col-6">
                                    <label for="anio">Año</label>
                                    @Html.DropDownListFor(model => model.anio, ViewBag.Anios as SelectList, new { @class = "form-control form-control-sm" })
                                </div>

                                <div class="form-group col-lg-1 col-md-2 col-sm-4 col-6">
                                    <label for="periodo">Periodo</label>
                                    @Html.DropDownListFor(model => model.periodo, ViewBag.Periodos as SelectList, "TODOS", new { @class = "form-control form-control-sm text-uppercase" })
                                </div>

                                <div class="form-group col-lg-1 col-md-2 col-sm-4 col-6">
                                    <label for="tipoEstudio">Tipo de estudio</label>
                                    @Html.DropDownListFor(model => model.tipoEstudio, ViewBag.TipoEstudios as SelectList, new { @class = "form-control form-control-sm text-uppercase" })
                                </div>

                                <div class="form-group col-lg-3 col-md-5 col-sm-12 col-12">
                                    <label for="codFac">Dependencia</label>
                                    @Html.DropDownListFor(model => model.codFac, ViewBag.Dependencias as SelectList, (string)ViewBag.FiltroDependencias, new { @class = "form-control form-control-sm text-uppercase" })
                                </div>

                                <div class="form-group col-lg-3 col-md-5 col-sm-12 col-12">
                                    <label for="codEsc">Escuela</label>
                                    @Html.DropDownListFor(model => model.codEsc, ViewBag.Escuelas as SelectList, "TODOS", new { @class = "form-control form-control-sm text-uppercase" })
                                </div>

                                <div class="form-group col-lg-3 col-md-5 col-sm-12 col-12">
                                    <label for="codRc">Especialidad</label>
                                    @Html.DropDownListFor(model => model.codRc, ViewBag.Especialidades as SelectList, "TODOS", new { @class = "form-control form-control-sm text-uppercase" })
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-lg-1 col-md-2 col-sm-4 col-6">
                                    <label for="esIngresante">Tipo de alumnos</label>
                                    @Html.DropDownListFor(model => model.esIngresante, ViewBag.TipoAlumno as SelectList, "TODOS", new { @class = "form-control form-control-sm text-uppercase" })
                                </div>

                                <div class="form-group col-lg-1 col-md-2 col-sm-4 col-6">
                                    <label for="estaPagado">Estado de pago</label>
                                    @Html.DropDownListFor(model => model.estaPagado, ViewBag.EstadoPagoObligaciones as SelectList, "TODOS", new { @class = "form-control form-control-sm text-uppercase" })
                                </div>

                                <div class="form-group col-lg-1 col-md-2 col-sm-4 col-6">
                                    <label for="codAlumno">Código de alumno</label>
                                    @Html.TextBoxFor(model => model.codAlumno, new { @class = "form-control form-control-sm" })
                                </div>

                                <div class="form-group col-lg-2 col-md-3 col-12">
                                    <button type="submit" class="btn btn-block btn-outline-primary mt-4"><i class="fa fa-fw fa-search-plus"></i> Buscar</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="table-responsive mt-4">
                    <p class="h5">Relación de estudiantes registrados en el sistema</p>

                    @Html.Grid(Model.resultado).Columns(columns => {
                        columns.Add(c => c.I_Anio).Titled("Año");
                        columns.Add(c => c.T_Periodo).Titled("Periodo");
                        columns.Add(c => c.C_CodAlu).Titled("Código alumno");
                        columns.Add(c => c.T_ApellidosNombres).Titled("Apellidos y nombres").Filterable(true);
                        columns.Add(c => c.T_DenomProg).Titled("Especialidad").Filterable(true);
                        columns.Add(c => c.T_EsIngresante).Titled("Tipo alumno").Filterable(true);
                        columns.Add(c => c.T_ProcesoDesc).Titled("Cuota").Filterable(true).Css("text-center");
                        columns.Add(c => c.I_MontoOblig).Titled("Monto Obl.").Filterable(true).Css("text-center");
                        columns.Add(c => c.T_Pagado).Titled("Estado").Filterable(true).Css("text-center");
                        columns.Add().SetWidth(125).Css("text-center").Encoded(false).Sanitized(false).RenderValueAs(model =>
                            model.B_Pagado.HasValue ? (model.B_Pagado.Value ? "" : "<a href=\""+ Url.Action("VerPagosObligaciones", "Pagos", new { obligacionID = model.I_ObligacionAluID }) + 
                            "\" class=\"modal-link-lg\"><i class=\"fa fa-fw fa-money\"></i> Pagar</a>") : "");
                        columns.Add().SetWidth(125).Css("text-center").Encoded(false).Sanitized(false).RenderValueAs(model => 
                            @<a href="@Url.Action("VerObligaciones", "Obligaciones", new { obligacionID = model.I_ObligacionAluID })" class="modal-link-lg"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Editar</a>);
                    }).WithPaging(12).Sortable(true).WithGridItemsCount("Registros encontrados").EmptyText("No se encontraron registros")
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $("#formConsultaObligaciones").on("change", "#tipoEstudio", function (e) {
            let tipoEstudio = $(this).val();

            CargarDependencias(tipoEstudio);
        });

        $("#formConsultaObligaciones").on("change", "#codFac", function (e) {
            let codFac = $(this).val();

            CargarEscuelas(codFac);
        });

        $("#formConsultaObligaciones").on("change", "#codEsc", function (e) {
            let codFac = $("#formConsultaObligaciones #codFac").val();
            let codEsc = $(this).val();

            CargarEspecialidades(codFac, codEsc);
        });

        function CargarDependencias(tipoEstudio) {
            let cmbDependencia = $('#formConsultaObligaciones #codFac');
            let cmbEscuelas = $('#formConsultaObligaciones #codEsc');
            let cmbEspecialidades = $('#formConsultaObligaciones #codRc');

            let parametros = {
                tipoEstudio: tipoEstudio
            };

            $.ajax({
                type: 'GET',
                url: ('@Url.Action("GetDependencias", "Service", new { httproute = "ActionApi" })'),
                data: parametros,
                dataType: 'json',
                beforeSend: function () {
                    cmbDependencia.html('');
                    cmbEscuelas.html('');
                    cmbEspecialidades.html('');
                },
                success: function (data) {
                    if (data) {
                        if (data.length > 0) {
                            let html = (data.length == 1) ? '' : '<option value="">TODOS</option>';

                            $.each(data, function (i, item) {
                                html += '<option value="' + item.Value + '">' + item.TextDisplay + '</option>'

                                if (i == 0) {
                                    CargarEscuelas(data.length == 1 ? item.Value : null);
                                }
                            });

                            cmbDependencia.html(html);
                        } else {
                            cmbDependencia.html('<option value="">TODOS</option>');
                            cmbEscuelas.html('<option value="">TODOS</option>');
                            cmbEspecialidades.html('<option value="">TODOS</option>');
                        }
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        }

        function CargarEscuelas(codFac) {
            let cmbEscuelas = $('#formConsultaObligaciones #codEsc');
            let cmbEspecialidades = $('#formConsultaObligaciones #codRc');

            let parametros = {
                codFac: codFac
            };

            $.ajax({
                type: 'GET',
                url: ('@Url.Action("GetEscuelas", "Service", new { httproute = "ActionApi" })'),
                data: parametros,
                dataType: 'json',
                beforeSend: function () {
                    cmbEscuelas.html('');
                    cmbEspecialidades.html('');
                },
                success: function (data) {
                    if (data) {
                        if (data.length > 0) {
                            let html = (data.length == 1) ? '' : '<option value="">TODOS</option>';

                            $.each(data, function (i, item) {
                                html += '<option value="' + item.Value + '">' + item.TextDisplay + '</option>'

                                if (i == 0) {
                                    CargarEspecialidades($("#codFac").val(), data.lengh == 1 ? item.Value : null);
                                }
                            });

                            cmbEscuelas.html(html);
                        } else {
                            cmbEscuelas.html('<option value="">TODOS</option>');
                            cmbEspecialidades.html('<option value="">TODOS</option>');
                        }
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        }

        function CargarEspecialidades(codFac, codEsc) {
            let cmbEspecialidad = $('#formConsultaObligaciones #codRc');

            let parametros = {
                codFac: codFac,
                codEsc: codEsc
            };

            $.ajax({
                type: 'GET',
                url: ('@Url.Action("GetEspecialidades", "Service", new { httproute = "ActionApi" })'),
                data: parametros,
                dataType: 'json',
                beforeSend: function () {
                    cmbEspecialidad.html('');
                },
                success: function (data) {
                    if (data) {
                        let html = (data.length == 1) ? '' : '<option value="">TODOS</option>';

                        $.each(data, function (i, item) {
                            html += '<option value="' + item.Value + '">' + item.TextDisplay + '</option>'
                        });

                        cmbEspecialidad.html(html);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        }
    </script>
}
