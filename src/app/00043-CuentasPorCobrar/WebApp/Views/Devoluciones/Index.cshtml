@model IEnumerable<WebApp.ViewModels.DevolucionesViewModel>
@using GridMvc.Html

<div class="container-fluid">
    <div class="col-12">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-refresh">&nbsp;</i>Operaciones </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa bi-box-arrow-down-right">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>

    <div class="col-12 mt-5">
        <p class="h3"><small>Devoluciones de pagos registrados</small></p>
        <a href="@Url.Action("Create", "Devoluciones")" class="btn btn-primary float-right modal-link mb-5">
            <i class="fa bi-box-arrow-down-right"></i> Registrar Devolución
        </a>
        <div class="row d-flex justify-content-end">
            <div class="col-lg-4 col-12">
                <div class="form-group form-row">
                    <label for="inputAnio" class="col-7 col-form-label text-right">Año: </label>
                    <div class="col-5">
                        @Html.DropDownList("cboAnio", ViewBag.Anios as SelectList, new { Class = "form-control text-center" })
                    </div>
                </div>
            </div>
        </div>

        <div class="table-responsive" style="min-height:300px">
        @Html.Grid(Model).Columns(columns =>
        {
            columns.Add(c => c.EntidadRecaudadora).SetWidth(150).Titled("Entidad recaudadora").Filterable(true);
            columns.Add(c => c.NroRecibo).Css("text-center").SetWidth(150).Titled("Nro. recibo").Filterable(true);
            columns.Add(c => c.Concepto).SetWidth(150).Titled("Concepto").Filterable(true);
            //columns.Add(c => c.Monto).Css("text-right").SetWidth(150).Titled("Monto devuelto").Filterable(true);
            columns.Add(c => c.MontoDevolucion).Css("text-right").SetWidth(150).Titled("Monto devuelto").Filterable(true);
            columns.Add(c => c.FecAprobacion).RenderValueAs(m => m.FecAprobacion.Value.ToShortDateString()).Css("text-center").SetWidth(150).Titled("Fec. aprobación").Filterable(true);
            columns.Add(c => c.FecDevuelve).RenderValueAs(m => m.FecDevuelve.HasValue ? m.FecDevuelve.Value.ToShortDateString(): "Sin fecha").Css("text-center").SetWidth(150).Titled("Fec. devolución").Filterable(true);
            columns.Add(c => c.Anulado).Css("text-center").Encoded(false).Sanitized(false).Filterable(true).SetWidth(160).Titled("Estado")
                .RenderValueAs(model => !model.Anulado ?
                                    @Html.Raw("<button type=\"submit\" class=\"btn btn-xs btn-warning\" onclick=\"anularDevolucion(" + @model.DevolucionId + ");\"><i class=\"fa fa-exclamation-circle\">&nbsp;</i>Anular</button>")
                                    : @Html.Raw("<a class=\"btn btn-xs btn-secondary\" href=\"" + @Url.Action("DetalleAnulacion", "Devoluciones", new { id = model.DevolucionId, area = "" }) + "\"><i class=\"fa fa-minus-circle\">&nbsp;</i>Anulado</a>"));
            columns.Add().Css("text-right").Encoded(false).Sanitized(false).Filterable(true).SetWidth(200)
                .RenderValueAs(model => model.Anulado ? @Html.Raw("")
                                    : @Html.Raw("<a class=\"modal-link\" href=\"" + @Url.Action("Edit", "Devoluciones", new { id = model.DevolucionId, area = "" }) + "\"><i class=\"fa fa-pencil-square-o\" title=\"editar\" data-toggle=\"tooltip\" data-placement=\"bottom\">&nbsp;</i><span class=\"d-none d-md-inline-block\">Editar</span></a>"));
        }).WithPaging(10).Sortable(true).WithGridItemsCount("Registros encontrados").EmptyText("No se encontraron registros")
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $('#cboAnio').on('change', function () {
            location.href = '@Url.Action("Index", "Devoluciones")' + '?anio=' + $(this).val();
        })


        function anularDevolucion(devolucionId, url) {
            var parametros = {
                devolucionId: devolucionId,
            };

            $.ajax({
                cache: false,
                url: '@Url.Action("Anular", "Devoluciones", new { area = "" })',
                type: "POST",
                data: parametros,
                dataType: "json",
                success: function (data) {
                    if (data['Value']) { location.reload(); }
                    else { toastr.warning(data['Message']); }
                },
                error: function () {
                    toastr.error("No se pudo actualizar el estado. Intente nuevamente en unos segundos.<br /> Si el problema persiste comuníquese con el área de soporte de la aplicación.");
                }
            });
        }
    })

</script>