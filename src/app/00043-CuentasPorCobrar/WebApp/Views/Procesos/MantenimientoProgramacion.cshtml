@model IEnumerable<WebApp.ViewModels.SelectViewModel>

<div class="container-fluid">
    <div class="col-12">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="/Views/Home/Index.html"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-cogs">&nbsp;</i>Configuracion </span></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-calendar">&nbsp;</i>Configuracion </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa fa-calendar">&nbsp;</i>Agregar</span></li>
                </ol>
            </nav>
            <h1 class="">Programación de obligaciones <small></small></h1>
        </section>
    </div>
    <div class="col-12 my-4">
        <div class="card bg-transparent">
            <div class="card-body">
                <p class="alert alert-info">
                    <i class="fa fa-info-circle">&nbsp;</i> 
                    Seleccione lascategorías que serán consideradas en la generación de obligaciones, 
                    ingrese los datos solicitados y asigne los conceptos asociados
                </p>
                <table class="table table-hover table-sm mt-4">
                    <thead>
                        <tr>
                            <th>N°</th>
                            <th>Nombre</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).on('ready', function () {
        $('#btnsubmit').removeClass('disabled');
    });

    $(document).on("submit", "form", function () {
        var submited = parseInt($("#Submited").val());
        $(this).submit(function () {
            if (submited > 0) {
                return false;
            }
            return true;
        });
        $("#Submited").val(submited + 1);
        return true;
    });

    $(document).on("change", '#I_CatPagoID', function (event) {
        let txtPrioridad = $('#I_Prioridad');
        let cmbCtaDepositoHabilitadas = $('#cmbCuentasHabilitadas');
        let cmbCtaDeposito = $('#Arr_CtaDepositoID');

        txtPrioridad.val('');
        cmbCtaDepositoHabilitadas.empty();
        cmbCtaDeposito.empty();

        $.ajax({
            url: ('/api/Service/GetPrioridad/' + this.value),
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            cache: false,
            beforeSend: function () { },
            success: function (data) {
                if (data && !isNaN(data)) {
                    txtPrioridad.val(data);
                }
            },
            error: function () { },
            complete: function () { }
        });

        $.ajax({
            url: ('/api/Service/GetCuentasDeposito/' + this.value),
            type: 'GET',
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            cache: false,
            beforeSend: function () { },
            success: function (data) {
                if (data && data.length > 0) {
                    for (let i = 0; i < data.length; i++) {
                        cmbCtaDepositoHabilitadas.append('<option value="' + data[i].Value + '">' + data[i].TextDisplay + '</option>');
                    }
                }
            },
            error: function () { },
            complete: function () { }
        });
    });

    $(document).on("click", "#btnAddCtaDeposito", function () {
        let comboOrigen = $('#cmbCuentasHabilitadas option:selected');
        let comboDestino = $('#Arr_CtaDepositoID');

        if (comboOrigen.length > 0) {
            for (var i = 0; i < comboOrigen.length; i++) {
                let option = comboOrigen[i];

                if (option.selected && !opcionDuplicada(comboDestino, option.value)) {
                    agregarOpcionCombo(comboDestino, option.value, option.text);
                }
            }
        }
    });

    $(document).on("click", "#btnRemoveCtaDeposito", function () {
        $('#Arr_CtaDepositoID option:selected').remove();
    });

    function opcionDuplicada(comboBox, searchedValue) {
        if (comboBox[0].options.length > 0) {
            let options = comboBox[0].options;

            for (var i = 0; i < options.length; i++) {
                let option = options[i];

                if (option.value == searchedValue) {
                    return true;
                }
            }
        }
        return false;
    }

    function agregarOpcionCombo(comboBox, id, text) {
        comboBox.append('<option value="' + id + '">' + text + '</option>');
    }
</script>