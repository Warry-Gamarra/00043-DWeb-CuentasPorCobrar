
@model WebApp.ViewModels.RegistroProcesoViewModel

<div class="modal-header bg-dark-gray" style="border-radius: .2rem .2rem 0px 0px">
    <h5 class="modal-title text-center"><i class="fa fa-tag">&nbsp;</i> @ViewBag.Title</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
</div>

@using (Ajax.BeginForm("Save", "Procesos", new { area = "" }, new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "div_msg", OnBegin = "Load", OnComplete = "Stop" }))
{
    @Html.Hidden("Submited", 0)
    @Html.AntiForgeryToken()
    <div class="modal-body">
        <div class="container-fluid">
            @Html.HiddenFor(model => model.ProcesoId)
            @Html.HiddenFor(model => model.PrioridadId)

            <div class="form-group">
                @Html.LabelFor(model => model.CategoriaId, new { @class = "control-label" })
                @Html.DropDownListFor(model => model.CategoriaId, ViewBag.Categorias as SelectList, "", new { @class = "select-filter form-control text-uppercase", placeholder = "[SELECCIONAR DESC. CUOTA]" })
                <p class="text-danger small">@Html.ValidationMessageFor(model => model.CategoriaId)</p>
            </div>
            <div class="form-row">
                <div class="form-group col-4">
                    @Html.LabelFor(model => model.Anio, new { @class = "control-label" })
                    @Html.TextBoxFor(model => model.Anio, new { @class = "form-control", @readonly = "true" })
                    <p class="text-danger small">@Html.ValidationMessageFor(model => model.Anio)</p>
                </div>
                <div class="form-group col-8">
                    @Html.LabelFor(model => model.PerAcadId, new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.PerAcadId, ViewBag.Periodos as SelectList, "", new { @class = "select-filter form-control text-uppercase" })
                    <p class="text-danger small">@Html.ValidationMessageFor(model => model.PerAcadId)</p>
                </div>
            </div>
            <hr />
            <div class="form-group row">
                @Html.LabelFor(model => model.FecVencto, new { @class = "control-label col-form-label col-4" })
                <div class="col-8">
                    <div class="input-group date" id="datepicker_fecvento">
                        @Html.TextBoxFor(model => model.FecVencto, "{0:dd/MM/yyyy}", new { @class = "form-control" })
                        <div class="input-group-append">
                            <span class="input-group-text"><i class="fa fa-calendar-o"></i></span>
                        </div>
                    </div>
                    <p class="text-danger small">@Html.ValidationMessageFor(model => model.FecVencto)</p>
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.CtaDepositoID, new { @class = "control-label col-form-label col-4" })
                <div class="col-8">
                    @Html.ListBoxFor(model => model.CtaDepositoID, ViewBag.CtasDeposito as SelectList, new { @class = "select-multiple form-control text-uppercase", multiple = "true" })
                    <p class="text-danger small">@Html.ValidationMessageFor(model => model.CtaDepositoID)</p>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer" id="div_msg">
        <div class="col-md-12" style="display:none" id="loading">
            <h6>Actualizando los datos...</h6>

            <div class="progress">
                <div class="indeterminate"></div>
            </div>
        </div>

        <button type="submit" class="btn btn-primary" id="btnsubmit"><i class="fa fa-save"></i>&nbsp;Guardar</button>
        <button type="button" class="btn btn-secondary" id="btnCancel" data-dismiss="modal"><i class="fa fa-times-circle-o">&nbsp;</i>Cancelar</button>
    </div>

}

<script type="text/javascript">

    $(document).ready(function () {

        $('.select-filter').select2({
            theme: 'bootstrap4',
            dropdownParent: $('#modal-container'),
            placeholder: "[ SELECCIONAR ]"
        }).on('hide', function (e) {
            e.stopPropagation();
        });

        $('.select-multiple').select2({
            dropdownParent: $('#modal-container'),
            placeholder: "[ SELECCIONAR ]"
        }).on('hide', function (e) {
            e.stopPropagation();
        });


        $('.input-group.date').datepicker({
            todayBtn: 'linked',
            language: 'es',
            format: 'dd/mm/yyyy',
            autoclose: true,
            startDate: '-0d',
            weekStart: 0,
            orientation: 'bottom auto',
            calendarWeeks: true,
        }).on('hide', function (e) {
            e.stopPropagation();
        });

        $('#CategoriaId').on('change', function () {
            $.ajax({
                url: ('@Url.Action("GetCuentasDeposito", "Service", new { httproute = "ActionApi" })' + '/' + this.value),
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                cache: false,
                beforeSend: function () { },
                success: function (data) {
                    $('#CtaDepositoID').empty()
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            let options = ''
                            for (let j = 0; j < data[i].ItemsGroup.length; j++) {
                                options += '<option value="' + data[i].ItemsGroup[j].Value + '">' + data[i].ItemsGroup[j].TextDisplay + '</option>'
                            }
                            optGroup = `<optgroup label="` + data[i].NameGroup + '">' + options + '</optgroup>'
                            $('#CtaDepositoID').append(optGroup);
                        }
                    }
                },
                error: function () { },
                complete: function () { }
            });

        })
    })

</script>
