@model IEnumerable<WebApp.ViewModels.EstadoObligacionViewModel>
@using GridMvc.Html

<div class="container-fluid">
    <div class="col-12">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-search">&nbsp;</i>Consultas </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa bi-person-lines-fill">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>
    <br />

    <div class="col-12 mt-4">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body bg-light-gray">
                        <form id="frmConsultaEstudianteMatricula" method="get" action="@Url.Action("Consulta", "Estudiantes")">
                            <div class="form-row">
                                <div class="form-group col-lg-1 col-md-2 col-6">
                                    <label for="anio">Año</label>
                                    @Html.DropDownList("anio", new SelectList(ViewBag.Anios, "Value", "TextDisplay", DateTime.Now.Year), new { @class = "form-control form-control-sm" })
                                </div>
                                <div class="form-group col-lg-1 col-md-2 col-6 ">
                                    <label for="periodo">Periodo</label>
                                    @Html.DropDownList("periodo", new SelectList(ViewBag.Periodos, "Value", "TextDisplay", "15"), null, new { @class = "form-control form-control-sm text-uppercase" })
                                </div>
                                <div class="form-group col-lg-1 col-md-2 col-sm-4 col-6">
                                    <label for="tipoEstudio">Tipo de estudio</label>
                                    @Html.DropDownList("tipoEstudio", new SelectList(ViewBag.TipoEstudios, "Value", "TextDisplay", ViewBag.DefaultTipoEstudio), null, new { @class = "form-control form-control-sm text-uppercase" })
                                </div>
                                <div class="form-group col-lg-3 col-md-5 col-sm-12 col-12">
                                    <label for="dependencia">Facultades/Posgrado</label>
                                    @Html.DropDownList("dependencia", new SelectList(ViewBag.Dependencias, "Value", "TextDisplay", ViewBag.DefaultDependencia), "TODOS", new { @class = "form-control form-control-sm text-uppercase" })
                                </div>
                                <div class="form-group col-lg-1 col-md-2 col-6">
                                    <label for="codAlumno">Código de alumno</label>
                                    @Html.TextBox("codAlumno", null, new { @class = "form-control form-control-sm" })
                                </div>
                                <div class="form-group col-lg-2 col-md-3 col-12">
                                    <button type="submit" id="btnConsultarEstudiante" class="btn btn-block btn-outline-primary mt-4"><i class="fa fa-fw fa-search-plus"></i> Iniciar consulta</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <div class="table-responsive mt-4">
                    <p class="h5">Relación de estudiantes registrados en el sistema</p>
                    @Html.Grid(Model).Columns(columns => {
                        columns.Add(c => c.I_Anio).Titled("Año").Filterable(true);
                        columns.Add(c => c.T_Periodo).Titled("Periodo").Filterable(true);
                        columns.Add(c => c.C_CodAlu).Titled("Código alumno").Filterable(true);
                        columns.Add(c => c.T_ApellidosNombres).Titled("Nombres y apellidos").Filterable(true);
                        columns.Add(c => c.T_DenomProg).Titled("Especialidad").Filterable(true);
                        columns.Add(c => c.T_EsIngresante).Titled("Tipo alumno").Filterable(true);
                        columns.Add(c => c.T_ProcesoDesc).Titled("Cuota").Filterable(true).Css("text-center");
                        columns.Add(c => c.I_MontoOblig).Titled("Monto Obl.").Filterable(true).Css("text-center");
                        columns.Add(c => c.T_FecVencto).Titled("Fec.Vcto.").Filterable(true).Css("text-center");
                        columns.Add(c => c.T_Pagado).Titled("Estado").Filterable(true).Css("text-center");
                    }).WithPaging(12).Sortable(true).WithGridItemsCount("Registros encontrados").EmptyText("No se encontraron registros")
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $("#frmConsultaEstudianteMatricula").on("change", "#tipoEstudio", function (e) {
            let tipoEstudio = $(this).val();

            CargarDependencias(tipoEstudio);
        });

        function CargarDependencias(tipoEstudio) {
            let cmbDependencia = $('#dependencia');

            let parametros = {
                tipoEstudio: tipoEstudio
            };

            $.ajax({
                type: 'GET',
                url: ('@Url.Action("GetFacultades", "Service", new { httproute = "ActionApi" })'),
                data: parametros,
                dataType: 'json',
                beforeSend: function () {
                    cmbDependencia.html('');
                },
                success: function (data) {
                    if (data && data.length > 0) {
                        let html = '<option value="">TODOS</option>';

                        $.each(data, function (i, item) {
                            html += '<option value="' + item.Value + '">' + item.TextDisplay + '</option>'
                        });

                        cmbDependencia.html(html);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        }
    </script>
}
