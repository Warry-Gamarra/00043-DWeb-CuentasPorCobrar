@model IEnumerable<WebApp.ViewModels.DevolucionesViewModel>
@using GridMvc.Html

<div class="container-fluid">
    <div class="col-12">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-refresh">&nbsp;</i>Operaciones </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa bi-box-arrow-right">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>

    <div class="col-12 mt-5">
        <p class="h3"><small>Devoluciones de pagos registrados</small></p>
        <a href="@Url.Action("Create", "Devolucion")" class="btn btn-primary float-right modal-link mb-5">
            <i class="fa bi-box-arrow-right"></i> Registrar Devolución
        </a>
        @* <div class="row d-flex justify-content-end">
            <div class="col-lg-4 col-12">
                <div class="form-group form-row">
                    <label for="inputAnio" class="col-7 col-form-label text-right">Año: </label>
                    <div class="col-5">
                        @Html.DropDownList("inputAnio", ViewBag.Anios as SelectList, new { Class = "form-control text-center" })
                    </div>
                </div>
            </div>
        </div>*@

        <div class="table-responsive" style="min-height:300px">
            @*@Html.Grid(Model).Columns(columns =>
                       {
                                  columns.Add(c => c.CodClasificador).SetWidth(150).Titled("Clasificador").Filterable(true);
                                  columns.Add().Css("text-center px-0").Encoded(false).Sanitized(false)
                                         .RenderValueAs(model => @<span class="btn btn-xs btn-link" title="ver detalle" data-tooltip="tooltip" data-placement="right" data-toggle="modal" data-target="#detalleClasif" data-title="@Html.Raw(model.CodClasificador + " - " + model.Descripcion)" data-detalle="@Html.Raw(model.DescripDetalle)"><i class="fa bi-info-circle" aria-hidden="true"></i></span>);
                  columns.Add(c => c.Descripcion).Titled("Descripción").Filterable(true);
                  columns.Add(c => c.Habilitado).SetWidth(100).Css("text-center").Encoded(false).Sanitized(false)
                    .RenderValueAs(model => model.Habilitado ?
                                            @Html.Raw("<a href=\"" + Url.Action("HabilitarEquivalencias", "Clasificadores", new { id = model.Id, anio = ViewBag.Anio }) + "\" class=\"btn btn-xs px-2 btn-info modal-link-lg\"><i class=\"fa fa-cog\">&nbsp;</i><span class=\"d-none d-md-inline-block\">&nbsp;Editar configuración</span></a>")
                                            : @Html.Raw("<a href=\"" + Url.Action("HabilitarEquivalencias", "Clasificadores", new { id = model.Id, anio = ViewBag.Anio }) + "\" class=\"btn btn-xs px-2 btn-secondary modal-link-lg\"><i class=\"fa fa-minus-circle\">&nbsp;</i><span class=\"d-none d-md-inline-block\">&nbsp;</span>Sin configurar</span></a>"))
                    .Filterable(true).SetWidth(160).Titled("Equivalencias");
                  columns.Add().SetWidth(200).Css("text-right").Encoded(false).Sanitized(false).RenderValueAs(model => @<a href="@Url.Action("Edit", "Clasificadores", new { id = model.Id, area = "" })" class="modal-link-lg" title="editar" data-tooltip="tooltip" data-placement="bottom"><i class="fa fa-pencil-square-o" aria-hidden="true">&nbsp;</i><span class="d-none d-md-inline-block">Editar</span></a>);
            }).WithPaging(10).Sortable(true).WithGridItemsCount("Registros encontrados").EmptyText("No se encontraron registros")*@
        </div>
    </div>
</div>