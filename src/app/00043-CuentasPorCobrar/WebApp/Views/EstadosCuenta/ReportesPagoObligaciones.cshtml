@model WebApp.ViewModels.ReportePagosObligacionesViewModel
@Scripts.Render("~/bundles/jqueryval")

<style>
    .input-daterange {
        display: flex !important;
    }

    @@media (max-width: 768px) {
        .input-daterange {
            display: block !important;
        }
    }
</style>

<div class="container-fluid">
    <div class="col-12">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-search">&nbsp;</i>Consultas </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa bi-person-lines-fill">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>
    <br />
    <div class="col-12 mt-4">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body bg-light-gray">
                        <form name="frmGenerarReporteObl" id="frmGenerarReporteObl" action="/" method="GET">
                            <div class="form-row">
                                <div class="form-group col-xl-2 col-lg-6 col-md-6 col-sm-12 col-12">
                                    <label for="tipoEstudio">Tipo de Estudio</label>
                                    @Html.DropDownListFor(model => model.tipoEstudio, new SelectList(ViewBag.TipoEstudios, "Value", "TextDisplay"),
                                        new { @class = "form-control form-control-sm text-uppercase" })
                                </div>
                                <div class="form-group col-xl-2 col-lg-6 col-md-6 col-sm-12 col-12">
                                    <label for="tipoReporte">Reporte</label>
                                    @Html.DropDownListFor(model => model.tipoReporte, new SelectList(ViewBag.TipoReportes, "Value", "TextDisplay"), "SELECCIONAR",
                                        new { @class = "form-control form-control-sm text-uppercase", @required = "required" })
                                </div>
                                <div class="form-group col-xl-2 col-lg-6 col-md-6 col-sm-12 col-12">
                                    <label for="dependencia">Facultad / Posgrado</label>
                                    @Html.DropDownListFor(model => model.dependencia, new SelectList(ViewBag.Dependencias, "Value", "TextDisplay"), "TODOS",
                                        new { @class = "form-control form-control-sm text-uppercase", @disabled = "disabled" })
                                </div>
                                <div class="form-group col-xl-2 col-lg-6 col-md-6 col-sm-12 col-12">
                                    <label for="idEntidadFinanciera">Entidad Financiera</label>
                                    @Html.DropDownListFor(model => model.idEntidadFinanciera, new SelectList(ViewBag.EntidadesFinancieras, "Value", "TextDisplay"), "TODOS",
                                        new { @class = "form-control form-control-sm text-uppercase" })
                                </div>
                                <div class="form-group col-xl-4 col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div id="datepicker">
                                        <div class="input-daterange">
                                            <div class="form-group col-lg-6 col-md-6 col-sm-12 col-12" style="padding-left: 0px;">
                                                <label for="fechaDesde">Pagos desde</label>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.fechaDesde, "{0:dd/MM/yyyy}",
                                                        new { @class = "form-control form-control-sm", @placeholder = "Fecha inicio", @readonly = "readonly" })
                                                    <div class="input-group-append">
                                                        <span class="input-group-text"><i class="fa fa-calendar-o"></i></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group col-lg-6 col-md-6 col-sm-12 col-12" style="padding-left: 0px;">
                                                <label for="fechaHasta">Pagos hasta</label>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.fechaHasta, "{0:dd/MM/yyyy}",
                                                        new { @class = "form-control form-control-sm", @placeholder = "Fecha final", @readonly = "readonly" })
                                                    <div class="input-group-append">
                                                        <span class="input-group-text"><i class="fa fa-calendar-o"></i></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-xl-2 col-lg-4 col-md-6">
                                    <button type="button" id="btnConsultar" class="btn btn-block btn-outline-primary mt-4">
                                        <i class="fa fa-fw fa-engine">&nbsp;</i> Generar reporte
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-10 col-lg-12 mx-auto my-4">
        @if (Model != null && Model.reportePagosPorFacultadViewModel != null)
        {
            @Html.Partial("_ReportePagosPregradoPorFacultad", Model.reportePagosPorFacultadViewModel)

            <button type="button" id="btnExcelDescargar" class="btn btn-link pl-0">Descargar información en Excel [.xlsx]</button>
        }

        @if (Model != null && Model.reportePagosPorConceptoViewModel != null)
        {
            @Html.Partial("_ReportePagosPregradoPorConcepto", Model.reportePagosPorConceptoViewModel)

            <button type="button" id="btnExcelDescargar" class="btn btn-link pl-0">Descargar información en Excel [.xlsx]</button>
        }

        @if (Model != null && Model.reporteConceptosPorUnaFacultadViewModel != null)
        {
            @Html.Partial("_ReportePregradoConceptosPorUnaFacultad", Model.reporteConceptosPorUnaFacultadViewModel)

            <button type="button" id="btnExcelDescargar" class="btn btn-link pl-0">Descargar información en Excel [.xlsx]</button>
        }

        @if (Model != null && Model.reportePagosPorGradoViewModel != null)
        {
            @Html.Partial("_ReportePagosPosgradoPorGrado", Model.reportePagosPorGradoViewModel)

            <button type="button" id="btnExcelDescargar" class="btn btn-link pl-0">Descargar información en Excel [.xlsx]</button>
        }

        @if (Model != null && Model.reportePagosPorConceptoPosgradoViewModel != null)
        {
            @Html.Partial("_ReportePagosPosgradoPorConcepto", Model.reportePagosPorConceptoPosgradoViewModel)

            <button type="button" id="btnExcelDescargar" class="btn btn-link pl-0">Descargar información en Excel [.xlsx]</button>
        }

        @if (Model != null && Model.reporteConceptosPorGradoViewModel != null)
        {
            @Html.Partial("_ReportePosgradoConceptosPorGrado", Model.reporteConceptosPorGradoViewModel)

            <button type="button" id="btnExcelDescargar" class="btn btn-link pl-0">Descargar información en Excel [.xlsx]</button>
        }
    </div>
</div>

@section Scripts {
    <script>
        const REPORTE_GENERAL = "G";
        const REPORTE_CONCEPTO = "C";

        $('#datepicker .input-daterange').datepicker({
            todayBtn: 'linked',
            language: 'es',
            format: 'dd/mm/yyyy',
            autoclose: true,
            weekStart: 0
        }).on('hide', function (e) {
            e.stopPropagation();
        });

        $('#datepicker .input-daterange #fechaDesde').datepicker('update', "@Model.fechaDesde");
        $('#datepicker .input-daterange #fechaHasta').datepicker('update', "@Model.fechaHasta");

        if ($('#frmGenerarReporteObl #tipoReporte').val() !== REPORTE_GENERAL) {
            $('#frmGenerarReporteObl #dependencia').prop('disabled', false);
        }

        $(document).on('change', '#frmGenerarReporteObl #tipoReporte', function () {
            let cmbDependencia = $('#frmGenerarReporteObl #dependencia');
            if (this.value === REPORTE_GENERAL) {
                cmbDependencia.val('');
                cmbDependencia.prop('disabled', true);
            } else {
                cmbDependencia.prop('disabled', false);
            }
        });

        function MostrarMensaje(text) {
            Swal.fire({
                title: '',
                text: text,
                icon: "error",
                timer: 6000
            });
        }

        $(document).on("change", "#frmGenerarReporteObl #tipoEstudio", function (e) {
            CargarDependencias($(this).val());
            $('#frmGenerarReporteObl #dependencia').prop('disabled', true);
        });

        function CargarDependencias(tipoEstudio) {
            let cmbDependencia = $('#frmGenerarReporteObl #dependencia');

            let parametros = {
                tipoEstudio: tipoEstudio
            };

            $.ajax({
                type: 'GET',
                url: ('@Url.Action("GetFacultades", "Service", new { httproute = "ActionApi" })'),
                data: parametros,
                dataType: 'json',
                beforeSend: function () {
                    cmbDependencia.html('');
                },
                success: function (data) {
                    if (data && data.length > 0) {
                        let html = '<option value="">TODOS</option>';

                        $.each(data, function (i, item) {
                            html += '<option value="' + item.Value + '">' + item.TextDisplay + '</option>'
                        });

                        cmbDependencia.html(html);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        }

        $(document).on("click", "#btnConsultar", function (e) {

            let cmbReporte = $('#frmGenerarReporteObl #tipoReporte');
            let cmbDependencia = $('#frmGenerarReporteObl #dependencia');

            if (cmbReporte.val() === '') {
                MostrarMensaje("Debe seleccionar un Tipo de Reporte.");
            } else {
                document.forms.frmGenerarReporteObl.action = "@Url.Action("ReportesPagoObligaciones", "EstadosCuenta")";
                document.forms.frmGenerarReporteObl.submit();
            }
        });

        $(document).on("click", "#btnExcelDescargar", function (e) {
            let cmbReporte = $('#frmGenerarReporteObl #tipoReporte');
            let cmbDependencia = $('#frmGenerarReporteObl #dependencia');

            if (cmbReporte.val() === '') {
                MostrarMensaje("Debe seleccionar un Tipo de Reporte.");
            } else {
                document.forms.frmGenerarReporteObl.action = "@Url.Action("DescargaReportesPagoObligaciones", "EstadosCuenta")";
                document.forms.frmGenerarReporteObl.submit();
            }
        });
    </script>
}
