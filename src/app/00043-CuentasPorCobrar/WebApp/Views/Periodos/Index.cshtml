@model IEnumerable<WebApp.ViewModels.PeriodoViewModel>

@using GridMvc.Html

<div class="container-fluid">
    <div class="col-12">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-wrench">&nbsp;</i>Mantenimiento </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa fa-envelope">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>
    <br />

    <div class="col-12">
        <a href="@Url.Action("Create", "Periodos")" class="btn btn-primary pull-right modal-link">
            <i class="fa fa-envelope"></i> Nuevo
        </a>

        <p class="h3"><small>Desc. Cuota de pago</small></p>
        <br />

        <br />
        <div class="table-responsive" style="min-height:300px">
            @Html.Grid(Model).Columns(columns =>
                {
                    columns.Add(c => c.T_TipoPerDesc).Titled("Descripción").Filterable(true);
                    columns.Add(c => c.I_Anio).Titled("Año").Filterable(true);
                    columns.Add(c => c.D_FecVencto).Format("{0:dd/MM/yyyy}").Titled("Fch. Vencimiento").Filterable(true);
                    columns.Add(c => c.I_Prioridad).Titled("Prioridad").Filterable(true);
                    columns.Add().SetWidth(200).Css("text-right").Encoded(false).Sanitized(false).
                        RenderValueAs(model => @<a href="@Url.Action("Edit", "Periodos", new { id = model.I_PeriodoID })" class="modal-link"><i class="fa fa-pencil-square-o" aria-hidden="true">&nbsp;</i><span class="d-none d-md-inline-block">Editar</span></a>);
                     }).WithPaging(10).Sortable(true).WithGridItemsCount("Registros encontrados").EmptyText("No se encontraron registros")
        </div>

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).on('ready', function () {
            $('#btnsubmit').removeClass('disabled');
        });

        $("form").submit(function () {
            var submited = parseInt($("#Submited").val());
            $(this).submit(function () {
                if (submited > 0) {
                    return false;
                }
                return true;
            });
            $("#Submited").val(submited + 1);
            return true;

        });

        $(document).on("change", '#I_TipoPeriodoID', function (event) {
            let txtPrioridad = $('#I_Prioridad');
            let cmbCtaDeposito = $('#I_CtaDepositoID');

            txtPrioridad.val('');
            cmbCtaDeposito.empty();

            $.ajax({
                url: ('/api/Service/GetPrioridad/' + this.value),
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                cache: false,
                beforeSend: function () { },
                success: function (data) {
                    if (data && !isNaN(data)) {
                        txtPrioridad.val(data);
                    }
                },
                error: function () { },
                complete: function () { }
            });

            $.ajax({
                url: ('/api/Service/GetCuentasDeposito/' + this.value),
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                cache: false,
                beforeSend: function () { },
                success: function (data) {
                    if (data && data.length > 0) {
                        for (let i = 0; i < data.length; i++) {
                            $('#I_CtaDepositoID').append('<option value="' + data[i].I_CtaDepositoID + '">' + data[i].NumeroCuenta+'</option>');
                        }
                    }
                },
                error: function () { },
                complete: function () { }
            });
        });
    </script>
}
