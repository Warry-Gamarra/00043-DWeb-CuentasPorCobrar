
@model IEnumerable<WebApp.ViewModels.EntidadFinancieraViewModel>
@using GridMvc.Html

<div class="container-fluid">
    <div class="col-12">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa bi-tools">&nbsp;</i>Mantenimiento </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa fa-bank">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>
    <br />

    <div class="col-12">
        <a href="@Url.Action("Create", "EntidadFinanciera")" class="btn btn-primary float-right modal-link">
            <i class="fa fa-bank"></i> Agregar Entidad Financiera
        </a>

        <p class="h3"><small>Entidades Financieras registradas</small></p>
        <br />

        <br />
        <div class="table-responsive" style="min-height:350px">
            @Html.Grid(Model).Columns(columns =>
            {
                    columns.Add(c => c.NombreEntidad).SetWidth(350).Titled("Entidad").Filterable(true);
                    columns.Add(c => c.FechaActualiza).SetWidth(250).Css("text-center").RenderValueAs(c => c.FechaActualiza.ToShortDateString()).Titled("Fecha actualización").Filterable(true);
                    columns.Add(c => c.Habilitado).SetWidth(100).Css("text-center").Encoded(false).Sanitized(false)
                        .RenderValueAs(model => model.Habilitado ?
                                                                @Html.Raw("<span id=\"td2" + @model.Id + "\"><button type=\"submit\" class=\"btn btn-xs btn-success\" onclick=\"ChangeStateReloadPage(" + @model.Id + ", " + @model.Habilitado.ToString().ToLower() + ", '" + @Url.Action("ChangeState", "EntidadFinanciera") + "');\"><i class=\"fa fa-check-circle-o\">&nbsp;</i><span class=\"d-none d-md-inline-block\">Habilitado</span></button></span>")
                                                                : @Html.Raw("<span id=\"td2" + @model.Id + "\"><button type=\"submit\" class=\"btn btn-xs btn-secondary\" onclick=\"ChangeStateReloadPage(" + @model.Id + ", " + @model.Habilitado.ToString().ToLower() + ", '" + @Url.Action("ChangeState", "EntidadFinanciera") + "');\"><i class=\"fa fa-minus-circle\">&nbsp;</i><span class=\"d-none d-md-inline-block\">Deshabilitado</span></button></span>"))
                        .Filterable(true).SetWidth(160).Titled("Estado");
                    columns.Add(c => c.ArchivosHabilitados).SetWidth(100).Css("text-center").Encoded(false).Sanitized(false)
                        .RenderValueAs(model => model.ArchivosHabilitados ?
                                                                @Html.Raw("<span id=\"td1" + @model.Id + "\"><a class=\"btn btn-xs btn-warning\" href=\"" + @Url.Action("Banco", "EstructuraArchivo", new { id = model.Id}) + "\"><i class=\"fa fa-cog\">&nbsp;</i><span class=\"d-none d-md-inline-block\">Configurar</span></button></span>")
                                                                : @Html.Raw("<span id=\"td1" + @model.Id + "\"><button type=\"submit\" class=\"btn btn-xs btn-secondary\" onclick=\"ChangeStateReloadPage(" + @model.Id + ", " + @model.Habilitado.ToString().ToLower() + ", '" + @Url.Action("HabilitarArchivos", "EntidadFinanciera") + "');\"><i class=\"fa fa-minus-circle\">&nbsp;</i><span class=\"d-none d-md-inline-block\">Deshabilitado</span></button></span>"))
                        .Filterable(true).SetWidth(160).Titled("Archivos de intercambio");
                    columns.Add().SetWidth(200).Css("text-right").Encoded(false).Sanitized(false).RenderValueAs(model => @<a href="@Url.Action("CuentasDeposito", "EntidadFinanciera", new { id = model.Id, banco = model.NombreEntidad, area = "" })" class="modal-link"><i class="fa fa-credit-card" aria-hidden="true">&nbsp;</i><span class="d-none d-md-inline-block">Ver cuentas</span></a>);
                    columns.Add().SetWidth(100).Css("text-right").Encoded(false).Sanitized(false).RenderValueAs(model => @<a href="@Url.Action("Edit", "EntidadFinanciera", new { id = model.Id, area = "" })" class="modal-link"><i class="fa fa-pencil-square-o" aria-hidden="true">&nbsp;</i><span class="d-none d-md-inline-block">Editar</span></a>);
             }).WithPaging(10).Sortable(true).WithGridItemsCount("Registros encontrados").EmptyText("No se encontraron registros")
        </div>
    </div>
</div>
