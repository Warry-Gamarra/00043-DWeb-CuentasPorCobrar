@model WebApp.ViewModels.FiltroEnvioObligacionesModel
<style>
    .input-daterange {
        display: flex !important;
    }

    @@media (max-width: 768px) {
        .input-daterange {
            display: block !important;
        }
    }
</style>

<div class="container-fluid">
    <div class="col-12">
        <section class="content-header">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb float-right small d-none d-sm-inline-flex">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa fa-home">&nbsp;</i>Inicio</a></li>
                    <li class="breadcrumb-item"><span><i class="fa fa-search">&nbsp;</i>Consultas </span></li>
                    <li class="breadcrumb-item active"><span><i class="fa bi-journal-arrow-down">&nbsp;</i>@ViewBag.Title </span></li>
                </ol>
            </nav>
            <h1 class="">@ViewBag.Title <small></small></h1>
        </section>
    </div>
    <br />
    <div class="col-12 mt-4">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body bg-light-gray">
                        <form id="frmExportarPago" action="@Url.Action("GenerarArchivosBancos", "Pagos")" method="POST">
                            @Html.AntiForgeryToken()
                            <div class="form-row">
                                <div class="form-group col-xl-1 col-lg-4 col-md-4 col-sm-4 col-6">
                                    <label for="I_Anio">Año</label>
                                    @Html.DropDownListFor(model => model.I_Anio, new SelectList(ViewBag.Anios, "Value", "TextDisplay"), new { @class = "form-control form-control-sm" })
                                </div>
                                <div class="form-group col-xl-1 col-lg-4 col-md-4 col-sm-4 col-6">
                                    <label for="I_Periodo">Periodo</label>
                                    @Html.DropDownListFor(model => model.I_Periodo, new SelectList(ViewBag.Periodos, "Value", "TextDisplay"), null, new { @class = "form-control form-control-sm" })
                                </div>
                                <div class="form-group col-xl-1 col-lg-4 col-md-4 col-sm-4 col-12">
                                    <label for="E_TipoEstudio">Tipo de estudio</label>
                                    @Html.DropDownListFor(model => model.E_TipoEstudio, new SelectList(ViewBag.TipoEstudios, "Value", "TextDisplay"), null, new { @class = "form-control form-control-sm" })
                                </div>
                                <div class="form-group col-xl-3 col-lg-8 col-md-8 col-sm-12 col-12">
                                    <label for="T_Facultad">Facultades/Especialidades</label>
                                    @Html.DropDownListFor(model => model.T_Facultad, new SelectList(ViewBag.Facultades, "Value", "TextDisplay"), "TODOS", new { @class = "form-control form-control-sm" })
                                </div>
                                <div class="form-group col-xl-2 col-lg-4 col-md-4 col-sm-12 col-12">
                                    <label for="I_EntidadFinanciera">Banco</label>
                                    @Html.DropDownListFor(model => model.I_EntidadFinanciera, new SelectList(ViewBag.EntidadesFinancieras, "Value", "TextDisplay"), null, new { @class = "form-control form-control-sm" })
                                </div>
                                <div class="form-group col-xl-4 col-lg-12 col-md-12 col-sm-12 col-12">
                                    <div id="datepicker">
                                        <div class="input-daterange">
                                            <div class="form-group col-lg-6 col-md-6 col-sm-12 col-12" style="padding-left: 0px;">
                                                <label for="T_FechaDesde">F.Vcto. Desde</label>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.T_FechaDesde, "{0:dd/MM/yyyy}", new { @class = "form-control form-control-sm", @placeholder = "Fecha inicio" })
                                                    <div class="input-group-append">
                                                        <span class="input-group-text"><i class="fa fa-calendar-o"></i></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group col-lg-6 col-md-6 col-sm-12 col-12" style="padding-left: 0px;">
                                                <label for="T_FechaHasta">F.Vcto. Hasta</label>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(model => model.T_FechaHasta, "{0:dd/MM/yyyy}", new { @class = "form-control form-control-sm", @placeholder = "Fecha final" })
                                                    <div class="input-group-append">
                                                        <span class="input-group-text"><i class="fa fa-calendar-o"></i></span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group col-xl-2 col-lg-4 col-md-6">
                                    <button type="submit" class="btn btn-block btn-outline-primary mt-4" onclick="clickk()">
                                        <i class="fa fa-fw fa-engine">&nbsp;</i> Generar archivo
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <div class="card" id="generarObligMsj" style="margin-top: 5px;">
                    <div class="card-body">
                        @Html.ValidationSummary(true, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $('#datepicker .input-daterange').datepicker({
            todayBtn: 'linked',
            language: 'es',
            format: 'dd/mm/yyyy',
            autoclose: true,
            weekStart: 0
        }).on('hide', function (e) {
            e.stopPropagation();
        });

        $('#datepicker .input-daterange #T_FechaDesde').datepicker('update', "@Model.T_FechaDesde");
        $('#datepicker .input-daterange #T_FechaHasta').datepicker('update', "@Model.T_FechaHasta");

        function CargarEntidadesFinanciera(anio, periodo, tipoEstudio) {
            let cmbEntidadFinanciera = $('#I_EntidadFinanciera');

            $.ajax({
                type: 'GET',
                url: ('/api/Service/GetCtasDepositoPorPeriodo?anio=' + anio + '&periodo=' + periodo + '&tipoEstudio=' + tipoEstudio),
                dataType: 'json',
                beforeSend: function () {
                    cmbEntidadFinanciera.html('');
                },
                success: function (data) {
                    if (data && data.length > 0) {
                        let html = '';

                        $.each(data, function (i, item) {
                            html += '<option value="' + item.Value + '">' + item.TextDisplay + '</option>'
                        });

                        cmbEntidadFinanciera.html(html);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        }

        function CargarFacultades(tipoEstudio) {
            let cmbFacultad = $('#T_Facultad');

            let parametros = {
                tipoEstudio: tipoEstudio
            };

            $.ajax({
                type: 'GET',
                url: '@Url.Action("ObtenerFacultades", "Obligaciones")',
                data: parametros,
                dataType: 'json',
                beforeSend: function () {
                    cmbFacultad.html('');
                },
                success: function (data) {
                    if (data && data.length > 0) {
                        let html = (tipoEstudio === 'Pregrado') ? '<option value="">TODOS</option>' : '';

                        $.each(data, function (i, item) {
                            html += '<option value="' + item.Value + '">' + item.TextDisplay + '</option>'
                        });

                        cmbFacultad.html(html);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        }

        $("#frmExportarPago").on("change", "#I_Anio", function (e) {
            let anio = $(this).val();
            let periodo = $('#I_Periodo').val();
            let tipoEstudio = $('#E_TipoEstudio').val();

            CargarEntidadesFinanciera(anio, periodo, tipoEstudio);
        });

        $("#frmExportarPago").on("change", "#I_Periodo", function (e) {
            let anio = $('#I_Anio').val();
            let periodo = $(this).val();
            let tipoEstudio = $('#E_TipoEstudio').val();

            CargarEntidadesFinanciera(anio, periodo, tipoEstudio);
        });

        $("#frmExportarPago").on("change", "#E_TipoEstudio", function (e) {
            let anio = $('#I_Anio').val();
            let periodo = $('#I_Periodo').val();
            let tipoEstudio = $(this).val();

            CargarFacultades(tipoEstudio);
            CargarEntidadesFinanciera(anio, periodo, tipoEstudio);
        });

        $(document).ready(function () {
            let anio = $('#I_Anio').val();
            let periodo = $('#I_Periodo').val();
            let tipoEstudio = $('#E_TipoEstudio').val();

            CargarEntidadesFinanciera(anio, periodo, tipoEstudio);
        });
    </script>
}

